generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id         String    @id @default(uuid())
  name       String
  email      String    @unique
  phone      String?
  password   String
  owner_id   String?
  deleted_at DateTime?

  permissions  UsersPermissions[]
  owner        Users?             @relation("UserOwner", fields: [owner_id], references: [id])
  subordinates Users[]            @relation("UserOwner")
  created_at   DateTime           @default(now())
  updated_at   DateTime           @updatedAt
  refreshToken RefreshToken[]

  @@map("users")
}

model UsersPermissions {
  id            String @id @default(uuid())
  user_id       String
  permission_id String

  user       Users       @relation(fields: [user_id], references: [id], onDelete: Cascade)
  permission Permissions @relation(fields: [permission_id], references: [id], onDelete: Cascade)

  @@unique([user_id, permission_id])
  @@map("users_permissions")
}

model Permissions {
  id     String               @id @default(uuid())
  role   PermissionRolesEnum
  action PermissionActionEnum

  users_permissions UsersPermissions[]

  @@unique([role, action])
  @@map("permissions")
}

model UserPasswordReset {
  id         String   @id @default(uuid())
  token      String
  email      String
  isValid    Boolean  @default(true)
  updated_at DateTime @updatedAt

  @@map("user_password_reset")
}

model RefreshToken {
  id         String   @id @default(uuid())
  token      String   @unique
  user_id    String
  expires_at DateTime
  created_at DateTime @default(now())

  user Users @relation(fields: [user_id], references: [id])

  @@map("refresh_tokens")
}

enum PermissionRolesEnum {
  ADMIN
  FINANCIAL
  PEOPLE
}

enum PermissionActionEnum {
  CREATE
  LIST
  UPDATE
  DELETE
  ALL
}
